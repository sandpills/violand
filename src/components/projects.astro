---
import { getCollection } from "astro:content";
import CardListWrapper from "../layouts/CardListWrapper.astro";
import CardListItem from "../layouts/CardListItem.astro";
import Card from "../layouts/Card.astro";

const projects = await getCollection("projects");

// sort projects by their numbered prefixes in the filename
const sortedProjects = projects.sort((a, b) => {
    // Extract the number from the beginning of the filename
    const aMatch = a.id.match(/^(\d+)-/);
    const bMatch = b.id.match(/^(\d+)-/);

    if (aMatch && bMatch) {
        return parseInt(aMatch[1]) - parseInt(bMatch[1]);
    }

    // Fallback to alphabetical if no numbers found
    return a.id.localeCompare(b.id);
});

const sortedProjectsNewPaths = sortedProjects.map((project) => {
    const fileName = project.id.split("/").pop()?.replace(".md", "");
    const cleanSlug = fileName?.replace(/^\d+-/, ""); // remove number prefix chunk
    return {
        ...project,
        id: cleanSlug,
    };
});

console.log("Projects loaded:", sortedProjectsNewPaths.length);
---

<section class="font-mono italic text-sm pb-2">
    <p>found {sortedProjectsNewPaths.length} projects.</p>
</section>
<section>
    <CardListWrapper>
        {
            sortedProjectsNewPaths.map((project: any) => (
                <CardListItem>
                    <Card
                        href={project.data.link || `/projects/${project.id}/`}
                        title={project.data.title}
                        body={project.data.description ?? ""}
                        tags={project.data.tags}
                        date={
                            project.data.year
                                ? new Date(project.data.year, 0, 1)
                                : undefined
                        }
                        image={project.data.heroImage}
                    />
                </CardListItem>
            ))
        }
    </CardListWrapper>
</section>
